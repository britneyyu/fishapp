import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";


const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const fish = api.fish.getAll.useQuery();
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gradient-to-b from-[#1c5664] via-[#1f4774] to-[#282a4e]">
      
      <div className="items-center justify-between">
          <div className="mx-auto flex  items-center justify-between p-4 lg:px-8">
            <div className="flex col-span-0 md:col-span-1 md:basis-1/4"  ></div>
            <div className="flex text-4xl col-span-2 md:col-span-1 lg:text-6xl font-extrabold tracking-tight md:justify-center items-center text-white sm:text-5xl px-1 sm:basis-1/2">
                   <h1><span className="inline text-[hsl(280,100%,70%)]">FISH</span> APP</h1> 
            </div>
                <div className="flex items-center md:basis-1/4">
                    <AuthShowcase />
                </div>
                </div>
        </div>
        <div className="flex flex-col items-center justify-center ">
              <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
                <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
                  <Link
                    className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                    href="https://create.t3.gg/en/usage/first-steps"
                    target="_blank"
                  >
                    <h3 className="text-2xl font-bold">First Steps â†’</h3>
                    <div className="text-lg">
                      Just the basics - Everything you need to know to set up your
                      database and authentication.
                    </div>
                  </Link>
                  <Link
                    className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                    href="https://create.t3.gg/en/introduction"
                    target="_blank"
                  >
                    <h3 className="text-2xl font-bold">All Fish</h3>
                    <div className="text-lg">
                    {fish.data && (
                      <ul>
                        {fish.data.map((item) => (
                          <li key={item.id}>{item.commonName}</li>
                        ))}
                      </ul>
                    )}
                    </div>
                  </Link>
                  <div className="flex max-w-xs flex-col gap-4 rounded-2xl bg-white/10 p-4 text-white hover:bg-white/20">
                  fish app card
                </div>
               
                </div>
                
              </div>
        </div>
      
        
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-grid items-center justify-center gap-2 ">
      <div className=" md:visible hidden md:inline">
      <p className="text-center text-2xl text-white ">
        {sessionData && <span> {sessionData.user?.name}</span>}
        {secretMessage && <span>{secretMessage}</span>}
      </p>

      </div>
      <div className="hidden sm:inline">
      <button
        className="invisible sm:visible rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
      </div>
      <div className="inline sm:hidden">
      <button className="inline sm:hidden rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}>
           {sessionData ? "<-" : "->"}
      </button>
      </div>
    </div>
  );
};
